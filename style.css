*{
    margin: 0;
    font-family: "Pixelify Sans", sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
    box-sizing: border-box;
}


body{
    background: linear-gradient(90deg, rgb(184, 204, 254), rgb(135, 194, 233));
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.wrap{
    display: grid;
    margin: 0 auto;
    grid-template-columns: 1fr 1fr 1fr ;
    column-gap: 2%;
    width: 70%;
}

.container{
    display: flex;
    justify-items: center;
    align-items: center;
    flex-direction: column;
    align-self: center;
    justify-self: center;
    border: 4px solid #eea5f0;
    padding: 2vh 6vh;
    border-radius: 40px;
    font-size: 4vh;
    box-shadow: -1px -1px rgb(214, 255, 9), -5px -5px #558ABB;
    color: rgb(98, 97, 97);
    text-align: center;
}

.container .score{
    font-size: 10vh;
}

.tetris-title-box{
    display: flex;
    justify-items: center;
    align-items: center;
    flex-direction: column;
   
    padding: 2vh 6vh;
    color: rgb(112, 109, 109);
    
}

.tetris-title-box > span{


    font-size: 10vmin;
    color: rgb(255, 255, 255);
    text-shadow:  -1px -1px rgb(3, 3, 3), -5px -5px #f2e570, -10px -10px #eea5f0;
    animation: honename 10s infinite;
    margin-right: 12px;
    animation-delay: calc(0,2s * var(--i)); 
}


/* @keyframes honename{
    0%,
    80%{
        transform: rotateY(360deg); 
    }
} */

.grid{
    background: rgb(84, 137, 215);
    padding: 0.5vh;
    display: grid;
    grid-template-columns: repeat(10, auto);
    gap: 0.2vh;
    margin:1% 0 2% 0;
    border-radius: 20px;
}

.grid div{
    height: min(4vh, 7vw);
    width: min(4vh, 7vw);
    background-color: rgba(116, 116, 202, 0.2);
    border-radius: 1vh;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

/* тобто колір фігур можна прописати вручну в CSS, або задати рандомний колір в скріпті */

.grid .O{
background-color: white;
}

.grid .J{
    background-color: #eea5f0;
}

.grid .I{
    background-color: #f2e570;
}

.grid .L{
    background-color: rgb(112, 109, 109);
}

.grid .Z{
    background-color: rgb(184, 204, 254);
}

.grid .T{
    background-color: rgb(220, 219, 219);
}

.overlay{
   position: fixed;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   font-size: 5vh;
   background-color: rgb(238, 230, 79, 0.5);
   display: none;
   justify-content: center;
   align-items: center;
   text-align: center;
   flex-direction: column;
}

.overlay .scorefinal{
    font-size: 14vh;
}

.overlay .restart, .newgame{
border-radius: 18px;
padding: 10px;
font-size: 3vh;
cursor: pointer;
border: 1px solid rgb(156, 154, 154);
}


.overlay .restart:hover, .newgame:hover{
    background-color: rgb(112, 109, 109);
    border: none;
}

@media (max-width:800px) {
    .wrap{
        width: 40%;
        margin: 0 auto;
    display: grid;
    grid-template-rows: 1fr 4fr 1fr;
    grid-template-columns: 1fr;
    }  

    .tetris-title-box{
    flex-direction: row;
      display: flex;
      align-items: center;
      justify-content: space-around;
      margin-top: 10vh;
    }

    .tetris-title-box > span{
     margin-right: 0;    
    }

    body{
        height: 130vh;

    }
}


@media (max-width:530px) {
    .wrap{
        width: 70%;
        height: 70%;
        margin: 0 auto;
    }  

    body{
        align-items: start;
    }

    .tetris-title-box{
          margin-top: 0vh;
        }

        .tetris-title-box > span{
            font-size: 45px;
        }

    .container{
            width: 60%;
margin-top: 1vh;
font-size: 4vmin;
        }

.grid{
    padding: 0.1vh;
    gap: 0.1vh;
    margin:1px 0 2px 0;
    border-radius: 20px;
}

.grid div{
    height: min(4vh, 7vw);
    width: min(4vh, 7vw);
    
}


}

    